<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="27" passed="27" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-09T21:04:24 EEST" name="Surefire suite" finished-at="2025-05-09T21:06:47 EEST" duration-ms="143411">
    <groups>
    </groups>
    <test started-at="2025-05-09T21:04:24 EEST" name="Surefire test" finished-at="2025-05-09T21:06:47 EEST" duration-ms="143411">
      <class name="UpdateProfile">
        <test-method signature="registerAndUpdateProfile()[pri:0, instance:UpdateProfile@4d5b6aac]" started-at="2025-05-09T21:06:11 EEST" name="registerAndUpdateProfile" finished-at="2025-05-09T21:06:26 EEST" duration-ms="14657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAndUpdateProfile -->
      </class> <!-- UpdateProfile -->
      <class name="zBillPayment">
        <test-method is-config="true" signature="setupAndRegister()[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:35 EEST" name="setupAndRegister" finished-at="2025-05-09T21:06:43 EEST" duration-ms="7295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAndRegister -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:43 EEST" name="beforeMethod" finished-at="2025-05-09T21:06:43 EEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void zBillPayment.TC18_navigateToBillPay()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC18_navigateToBillPay()[pri:4, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:43 EEST" name="TC18_navigateToBillPay" finished-at="2025-05-09T21:06:43 EEST" duration-ms="756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC18_navigateToBillPay -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:43 EEST" name="afterMethod" finished-at="2025-05-09T21:06:43 EEST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC18_navigateToBillPay status=SUCCESS method=zBillPayment.TC18_navigateToBillPay()[pri:4, instance:zBillPayment@32ee6fee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:43 EEST" name="beforeMethod" finished-at="2025-05-09T21:06:43 EEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void zBillPayment.TC19_validBillPaymentSubmission()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC19_validBillPaymentSubmission()[pri:5, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:43 EEST" name="TC19_validBillPaymentSubmission" finished-at="2025-05-09T21:06:46 EEST" duration-ms="2883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC19_validBillPaymentSubmission -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:46 EEST" name="afterMethod" finished-at="2025-05-09T21:06:46 EEST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC19_validBillPaymentSubmission status=SUCCESS method=zBillPayment.TC19_validBillPaymentSubmission()[pri:5, instance:zBillPayment@32ee6fee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC20_submitBillPayWithEmptyFields()[pri:6, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:46 EEST" name="TC20_submitBillPayWithEmptyFields" finished-at="2025-05-09T21:06:47 EEST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC20_submitBillPayWithEmptyFields -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:46 EEST" name="beforeMethod" finished-at="2025-05-09T21:06:46 EEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void zBillPayment.TC20_submitBillPayWithEmptyFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:47 EEST" name="afterMethod" finished-at="2025-05-09T21:06:47 EEST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC20_submitBillPayWithEmptyFields status=SUCCESS method=zBillPayment.TC20_submitBillPayWithEmptyFields()[pri:6, instance:zBillPayment@32ee6fee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zBillPayment@32ee6fee]" started-at="2025-05-09T21:06:47 EEST" name="tearDown" finished-at="2025-05-09T21:06:47 EEST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zBillPayment -->
      <class name="Register">
        <test-method is-config="true" signature="setup()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:46 EEST" name="setup" finished-at="2025-05-09T21:04:47 EEST" duration-ms="928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testNavigateToRegistrationPage()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:47 EEST" name="testNavigateToRegistrationPage" finished-at="2025-05-09T21:04:51 EEST" duration-ms="4146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigateToRegistrationPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:51 EEST" name="tearDown" finished-at="2025-05-09T21:04:51 EEST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:51 EEST" name="setup" finished-at="2025-05-09T21:04:52 EEST" duration-ms="867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRegisterWithMissingFields()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:52 EEST" name="testRegisterWithMissingFields" finished-at="2025-05-09T21:04:56 EEST" duration-ms="3942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterWithMissingFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:56 EEST" name="tearDown" finished-at="2025-05-09T21:04:56 EEST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:56 EEST" name="setup" finished-at="2025-05-09T21:04:57 EEST" duration-ms="950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRegisterWithTakenUsername()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:04:57 EEST" name="testRegisterWithTakenUsername" finished-at="2025-05-09T21:05:06 EEST" duration-ms="8476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterWithTakenUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:05:06 EEST" name="tearDown" finished-at="2025-05-09T21:05:06 EEST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:05:06 EEST" name="setup" finished-at="2025-05-09T21:05:07 EEST" duration-ms="972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRegisterWithValidDetails()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:05:07 EEST" name="testRegisterWithValidDetails" finished-at="2025-05-09T21:05:13 EEST" duration-ms="5611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterWithValidDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:05:13 EEST" name="tearDown" finished-at="2025-05-09T21:05:13 EEST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:Register@5ad851c9]" started-at="2025-05-09T21:05:13 EEST" name="closeReport" finished-at="2025-05-09T21:05:13 EEST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Register -->
      <class name="TransferFundsS2">
        <test-method is-config="true" signature="setup()[pri:0, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:05:37 EEST" name="setup" finished-at="2025-05-09T21:05:40 EEST" duration-ms="3748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerTest()[pri:1, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:05:40 EEST" name="registerTest" finished-at="2025-05-09T21:05:43 EEST" duration-ms="2567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
        <test-method signature="openAccountTest()[pri:2, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:05:43 EEST" name="openAccountTest" finished-at="2025-05-09T21:05:56 EEST" depends-on-methods="TransferFundsS2.registerTest" duration-ms="12577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAccountTest -->
        <test-method signature="transferFundsTest()[pri:3, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:05:56 EEST" name="transferFundsTest" finished-at="2025-05-09T21:05:57 EEST" depends-on-methods="TransferFundsS2.openAccountTest" duration-ms="1936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transferFundsTest -->
        <test-method signature="verifyTransferTest()[pri:4, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:05:57 EEST" name="verifyTransferTest" finished-at="2025-05-09T21:05:57 EEST" depends-on-methods="TransferFundsS2.transferFundsTest" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTransferTest -->
        <test-method signature="searchTransferByAmountTest()[pri:5, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:05:57 EEST" name="searchTransferByAmountTest" finished-at="2025-05-09T21:06:00 EEST" depends-on-methods="TransferFundsS2.verifyTransferTest" duration-ms="2835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTransferByAmountTest -->
        <test-method signature="logoutTest()[pri:6, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:06:00 EEST" name="logoutTest" finished-at="2025-05-09T21:06:01 EEST" duration-ms="895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TransferFundsS2@13acb0d1]" started-at="2025-05-09T21:06:01 EEST" name="tearDown" finished-at="2025-05-09T21:06:01 EEST" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TransferFundsS2 -->
      <class name="TransferFundsS3">
        <test-method is-config="true" signature="setup()[pri:0, instance:TransferFundsS3@3e3047e6]" started-at="2025-05-09T21:06:01 EEST" name="setup" finished-at="2025-05-09T21:06:05 EEST" duration-ms="3495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerNewUser()[pri:1, instance:TransferFundsS3@3e3047e6]" started-at="2025-05-09T21:06:05 EEST" name="registerNewUser" finished-at="2025-05-09T21:06:08 EEST" duration-ms="3084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewUser -->
        <test-method signature="transferWithoutDataWhileLoggedIn()[pri:2, instance:TransferFundsS3@3e3047e6]" started-at="2025-05-09T21:06:08 EEST" name="transferWithoutDataWhileLoggedIn" finished-at="2025-05-09T21:06:09 EEST" duration-ms="1270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transferWithoutDataWhileLoggedIn -->
        <test-method signature="logoutAndAccessProtectedPage()[pri:3, instance:TransferFundsS3@3e3047e6]" started-at="2025-05-09T21:06:09 EEST" name="logoutAndAccessProtectedPage" finished-at="2025-05-09T21:06:11 EEST" duration-ms="1383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAndAccessProtectedPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TransferFundsS3@3e3047e6]" started-at="2025-05-09T21:06:11 EEST" name="tearDown" finished-at="2025-05-09T21:06:11 EEST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TransferFundsS3 -->
      <class name="TransferFundsS1">
        <test-method is-config="true" signature="setup()[pri:0, instance:TransferFundsS1@b62fe6d]" started-at="2025-05-09T21:05:13 EEST" name="setup" finished-at="2025-05-09T21:05:17 EEST" duration-ms="3816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerTest()[pri:1, instance:TransferFundsS1@b62fe6d]" started-at="2025-05-09T21:05:17 EEST" name="registerTest" finished-at="2025-05-09T21:05:20 EEST" duration-ms="3501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
        <test-method signature="openAccountTest()[pri:2, instance:TransferFundsS1@b62fe6d]" started-at="2025-05-09T21:05:20 EEST" name="openAccountTest" finished-at="2025-05-09T21:05:33 EEST" depends-on-methods="TransferFundsS1.registerTest" duration-ms="12902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAccountTest -->
        <test-method signature="transferFundsTest()[pri:3, instance:TransferFundsS1@b62fe6d]" started-at="2025-05-09T21:05:33 EEST" name="transferFundsTest" finished-at="2025-05-09T21:05:35 EEST" depends-on-methods="TransferFundsS1.openAccountTest" duration-ms="2093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transferFundsTest -->
        <test-method signature="verifyTransferTest()[pri:4, instance:TransferFundsS1@b62fe6d]" started-at="2025-05-09T21:05:35 EEST" name="verifyTransferTest" finished-at="2025-05-09T21:05:35 EEST" depends-on-methods="TransferFundsS1.transferFundsTest" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTransferTest -->
        <test-method signature="logoutTest()[pri:5, instance:TransferFundsS1@b62fe6d]" started-at="2025-05-09T21:05:35 EEST" name="logoutTest" finished-at="2025-05-09T21:05:36 EEST" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TransferFundsS1@b62fe6d]" started-at="2025-05-09T21:05:36 EEST" name="tearDown" finished-at="2025-05-09T21:05:37 EEST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TransferFundsS1 -->
      <class name="Login">
        <test-method is-config="true" signature="setup()[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:24 EEST" name="setup" finished-at="2025-05-09T21:04:35 EEST" duration-ms="11135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:35 EEST" name="beforeMethod" finished-at="2025-05-09T21:04:36 EEST" duration-ms="486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.TC01_verifyValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC01_verifyValidLogin()[pri:1, instance:Login@475e586c]" started-at="2025-05-09T21:04:36 EEST" name="TC01_verifyValidLogin" finished-at="2025-05-09T21:04:39 EEST" duration-ms="2835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_verifyValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:39 EEST" name="afterMethod" finished-at="2025-05-09T21:04:40 EEST" duration-ms="1057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC01_verifyValidLogin status=SUCCESS method=Login.TC01_verifyValidLogin()[pri:1, instance:Login@475e586c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:40 EEST" name="beforeMethod" finished-at="2025-05-09T21:04:40 EEST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.TC02_verifyLoginFailsWithIncorrectCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC02_verifyLoginFailsWithIncorrectCredentials()[pri:2, instance:Login@475e586c]" started-at="2025-05-09T21:04:40 EEST" name="TC02_verifyLoginFailsWithIncorrectCredentials" finished-at="2025-05-09T21:04:41 EEST" duration-ms="1202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_verifyLoginFailsWithIncorrectCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:41 EEST" name="afterMethod" finished-at="2025-05-09T21:04:42 EEST" duration-ms="487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC02_verifyLoginFailsWithIncorrectCredentials status=SUCCESS method=Login.TC02_verifyLoginFailsWithIncorrectCredentials()[pri:2, instance:Login@475e586c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:42 EEST" name="beforeMethod" finished-at="2025-05-09T21:04:42 EEST" duration-ms="436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.TC03_verifyLoginFailsWithBlankCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC03_verifyLoginFailsWithBlankCredentials()[pri:3, instance:Login@475e586c]" started-at="2025-05-09T21:04:42 EEST" name="TC03_verifyLoginFailsWithBlankCredentials" finished-at="2025-05-09T21:04:43 EEST" duration-ms="781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03_verifyLoginFailsWithBlankCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:43 EEST" name="afterMethod" finished-at="2025-05-09T21:04:43 EEST" duration-ms="477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC03_verifyLoginFailsWithBlankCredentials status=SUCCESS method=Login.TC03_verifyLoginFailsWithBlankCredentials()[pri:3, instance:Login@475e586c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:43 EEST" name="beforeMethod" finished-at="2025-05-09T21:04:44 EEST" duration-ms="461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.TC04_validateErrorMessageOnFailedLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC04_validateErrorMessageOnFailedLogin()[pri:4, instance:Login@475e586c]" started-at="2025-05-09T21:04:44 EEST" name="TC04_validateErrorMessageOnFailedLogin" finished-at="2025-05-09T21:04:45 EEST" duration-ms="1353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04_validateErrorMessageOnFailedLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:45 EEST" name="afterMethod" finished-at="2025-05-09T21:04:46 EEST" duration-ms="490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC04_validateErrorMessageOnFailedLogin status=SUCCESS method=Login.TC04_validateErrorMessageOnFailedLogin()[pri:4, instance:Login@475e586c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Login@475e586c]" started-at="2025-05-09T21:04:46 EEST" name="tearDown" finished-at="2025-05-09T21:04:46 EEST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Login -->
      <class name="UpdateProfileWithEmpty">
        <test-method signature="updateProfileWithEmptyFields_ShouldShowValidation()[pri:0, instance:UpdateProfileWithEmpty@5562c41e]" started-at="2025-05-09T21:06:26 EEST" name="updateProfileWithEmptyFields_ShouldShowValidation" finished-at="2025-05-09T21:06:35 EEST" duration-ms="9607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileWithEmptyFields_ShouldShowValidation -->
      </class> <!-- UpdateProfileWithEmpty -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
